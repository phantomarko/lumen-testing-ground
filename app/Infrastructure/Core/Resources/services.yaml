parameters:
  debug: '%env(bool:APP_DEBUG)%'

  # entity manager
  entity_manager.connection:
    driver: '%env(EM_DRIVER)%'
    host: '%env(EM_HOST)%'
    port: '%env(EM_PORT)%'
    user: '%env(EM_USERNAME)%'
    password: '%env(EM_PASSWORD)%'
    dbname: '%env(EM_DATABASE)%'
  entity_manager.entities_mapping: # array of: 'path from project root dir' => 'namespace'
    app/Infrastructure/Product/Model/EntityManager: 'App\Domain\Product\Model'
  entity_manager.custom_type_mappings: # array of: 'name' => 'namespace'
    uuid: 'App\Infrastructure\Core\ValueObject\EntityManager\UuidCustomType'
    productname: 'App\Infrastructure\Product\ValueObject\EntityManager\ProductNameCustomType'
    price: 'App\Infrastructure\Core\ValueObject\EntityManager\PriceCustomType'

  # document manager
  document_manager.connection_uri: 'mongodb://%env(DM_USERNAME)%:%env(DM_PASSWORD)%@%env(DM_HOST)%:%env(DM_PORT)%'
  document_manager.connection_uri_options:
    authSource: '%env(DM_AUTH_SOURCE)%'
    readPreference: '%env(DM_READ_PREFERENCE)%'
  document_manager.database: '%env(DM_DATABASE)%'
  document_manager.entities_mapping:
    app/Infrastructure/Product/Model/DocumentManager: 'App\Domain\Product\Model'
  document_manager.custom_type_mappings:
    uuid: 'App\Infrastructure\Core\ValueObject\DocumentManager\UuidCustomType'
    productname: 'App\Infrastructure\Product\ValueObject\DocumentManager\ProductNameCustomType'
    price: 'App\Infrastructure\Core\ValueObject\DocumentManager\PriceCustomType'

  # tactician
  tactician.mappings:
    App\Application\Product\Query\GetProductQuery: 'App\Application\Product\Query\GetProductQueryHandler'
    App\Application\Product\Command\CreateProductCommand: 'App\Application\Product\Command\CreateProductCommandHandler'

services:
  # container builder
  container_builder:
    synthetic: true # must be injected manually after instance the object

  # entity manager
  App\Infrastructure\Core\Factory\DoctrineEntityManagerFactory:
    class: App\Infrastructure\Core\Factory\DoctrineEntityManagerFactory
    arguments:
      - '%entity_manager.connection%'
      - '%entity_manager.entities_mapping%'
      - '%entity_manager.custom_type_mappings%'
      - '%debug%'
    public: true # make it public to be used directly in doctrine migrations

  Doctrine\ORM\EntityManager:
    class: Doctrine\ORM\EntityManager
    factory:
      - '@App\Infrastructure\Core\Factory\DoctrineEntityManagerFactory'
      - create

  # document manager
  App\Infrastructure\Core\Factory\DoctrineDocumentManagerFactory:
    arguments:
      - '%document_manager.connection_uri%'
      - '%document_manager.connection_uri_options%'
      - '%document_manager.database%'
      - '%document_manager.entities_mapping%'
      - '%document_manager.custom_type_mappings%'

  Doctrine\ODM\MongoDB\DocumentManager:
    factory:
      - '@App\Infrastructure\Core\Factory\DoctrineDocumentManagerFactory'
      - create

  # tactician
  App\Infrastructure\Core\Factory\TacticianCommandHandlerMiddlewareFactory:
    class: App\Infrastructure\Core\Factory\TacticianCommandHandlerMiddlewareFactory
    arguments:
      - '@container_builder'
      - '%tactician.mappings%'

  League\Tactician\Handler\CommandHandlerMiddleware:
    class: League\Tactician\Handler\CommandHandlerMiddleware
    factory:
      - '@App\Infrastructure\Core\Factory\TacticianCommandHandlerMiddlewareFactory'
      - create

  App\Infrastructure\Core\Bus\EntityManagerTransactionMiddleware:
    arguments:
      - '@Doctrine\ORM\EntityManager'

  App\Infrastructure\Core\Bus\DocumentManagerTransactionMiddleware:
    arguments:
      - '@Doctrine\ODM\MongoDB\DocumentManager'

  App\Infrastructure\Core\Factory\CommandBusFactory:
    class: App\Infrastructure\Core\Factory\CommandBusFactory
    arguments:
      - [
          '@App\Infrastructure\Core\Bus\EntityManagerTransactionMiddleware',
          '@App\Infrastructure\Core\Bus\DocumentManagerTransactionMiddleware',
          '@League\Tactician\Handler\CommandHandlerMiddleware'
      ]

  App\Infrastructure\Core\Bus\CommandBus:
    class: App\Infrastructure\Core\Bus\CommandBus
    factory:
      - '@App\Infrastructure\Core\Factory\CommandBusFactory'
      - create
    public: true # make it public to be used directly in bootstrap/app.php

  App\Infrastructure\Core\Factory\QueryBusFactory:
    class: App\Infrastructure\Core\Factory\QueryBusFactory
    arguments:
      - [ '@League\Tactician\Handler\CommandHandlerMiddleware' ]

  App\Infrastructure\Core\Bus\QueryBus:
    class: App\Infrastructure\Core\Bus\QueryBus
    factory:
      - '@App\Infrastructure\Core\Factory\QueryBusFactory'
      - create
    public: true # make it public to be used directly in bootstrap/app.php

  # services
  App\Infrastructure\Core\Service\RamseyUuidGenerator:
    class: App\Infrastructure\Core\Service\RamseyUuidGenerator
