services:
  # command and query handlers (must have the tags and be public)
  App\Application\Product\Query\GetProductQueryHandler:
    class: App\Application\Product\Query\GetProductQueryHandler
    arguments:
      - '@App\Domain\Product\Service\ProductFinder'
    public: true
    tags:
      - { name: tactician.handler, typehints: true }

  App\Application\Product\Command\CreateProductCommandHandler:
    class: App\Application\Product\Command\CreateProductCommandHandler
    arguments:
      - '@App\Domain\Product\Builder\ProductBuilder'
      - '@App\Infrastructure\Product\Repository\DocumentManagerProductRepository' # change to use MySQL or MongoDB
    public: true
    tags:
      - { name: tactician.handler, typehints: true }

  # services
  App\Domain\Product\Builder\ProductBuilder:
    class: App\Domain\Product\Builder\ProductBuilder
    arguments:
      - '@App\Infrastructure\Core\Service\RamseyUuidGenerator'

  App\Domain\Product\Service\ProductFinder:
    class: App\Domain\Product\Service\ProductFinder
    arguments:
      - '@App\Infrastructure\Product\Repository\DocumentManagerProductRepository' # change to use MySQL or MongoDB

  # repositories
  App\Infrastructure\Product\Repository\RandomPokemonProductRepository:
    class: App\Infrastructure\Product\Repository\RandomPokemonProductRepository

  App\Infrastructure\Product\Repository\VoidProductRepository:
    class: App\Infrastructure\Product\Repository\VoidProductRepository

  App\Infrastructure\Product\Repository\EntityManagerProductRepository:
    class: App\Infrastructure\Product\Repository\EntityManagerProductRepository
    arguments:
      - '@Doctrine\ORM\EntityManager'

  App\Infrastructure\Product\Repository\DocumentManagerProductRepository:
    arguments:
      - '@Doctrine\ODM\MongoDB\DocumentManager'
